4,5c4,5
< class INT {
< 	static const int num = N;
---
> struct INT {
>   static const int num = N;
10c10
< 	typedef INT<a::num + b::num> result;
---
>   typedef INT<a::num + b::num> result;
14,15c14,15
< class divide {
< 	typedef INT<a::num / b::num> result;
---
> struct divide {
>   typedef INT<a::num / b::num> result;
22,26c22,26
< template<typename N, typename d>
< class check_div {
< 	//asdf
< 	static const bool result = (N::num % d::num == 0) ||
< 								check_div<N, typename add<d,one>::result>::result;
---
> template <typename N, typename d>
> struct check_div {
>   // result 중에서 한 개라도 true 면 전체가 true
>   static const bool result = (N::num % d::num == 0) ||
>                              check_div<N, typename add<d, one>::result>::result;
29,31c29,31
< template<typename N>
< class _is_prime {
< 	static const bool result = !check_div<N, two>::result;
---
> template <typename N>
> struct _is_prime {
>   static const bool result = !check_div<N, two>::result;
34,36c34,36
< template<>
< class _is_prime<two> {
< 	static const bool result = true;
---
> template <>
> struct _is_prime<two> {
>   static const bool result = true;
39,41c39,41
< template<>
< class _is_prime<three> {
< 	static const bool result = true;
---
> template <>
> struct _is_prime<three> {
>   static const bool result = true;
44,46c44,46
< template<typename N>
< class check_div<N, typename divide<N, two>::result> {
< 	static const bool result = (N::num % (N::num / 2) == 0);
---
> template <typename N>
> struct check_div<N, typename divide<N, two>::result> {
>   static const bool result = (N::num % (N::num / 2) == 0);
49,51c49,51
< template<int N>
< class is_prime {
< 	static const bool result = _is_prime<INT<N> >::result;
---
> template <int N>
> struct is_prime {
>   static const bool result = _is_prime<INT<N> >::result;
54,61c54,60
< int main()
< {
< 	std::cout << std::boolalpha;
< 	std::cout << "Is prime ? :: " << is_prime<2>::result << std::endl;   // true
< 	std::cout << "Is prime ? :: " << is_prime<10>::result << std::endl;  // false
< 	std::cout << "Is prime ? :: " << is_prime<11>::result << std::endl;  // true
< 	std::cout << "Is prime ? :: " << is_prime<61>::result << std::endl;  // true
< }
---
> int main() {
>   std::cout << std::boolalpha;
>   std::cout << "Is 2 prime ? :: " << is_prime<2>::result << std::endl;
>   std::cout << "Is 10 prime ? :: " << is_prime<10>::result << std::endl;
>   std::cout << "Is 11 prime ? :: " << is_prime<11>::result << std::endl;
>   std::cout << "Is 61 prime ? :: " << is_prime<61>::result << std::endl;
> }
\ No newline at end of file
